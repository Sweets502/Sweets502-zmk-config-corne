/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>; // 0 backlight + 27 underglow
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R      &kp T          &kp Y            &kp U       &kp I      &kp O    &kp P     &kp BSPC
&lt 4 CAPS  &kp A  &kp S  &kp D     &kp F      &kp G          &kp H            &kp J       &kp K      &kp L    &kp SEMI  &lt 3 APOS
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V      &kp B          &kp N            &kp M       &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp LGUI  &kp SPACE  &lt 2 SPACE    &lt 1 BACKSPACE  &kp RETURN  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5    &kp N6  &kp N7    &kp UP    &kp N9     &kp N0  &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &tog 6    &trans  &trans    &trans    &trans     &trans  &kp RIGHT_SHIFT
                           &kp LGUI  &trans  &trans    &trans  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5    &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &kp BSPC
&kp LCTRL  &trans  &trans  &trans    &trans  &trans    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans  &trans  &trans    &trans  &trans    &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                           &kp LGUI  &trans  &trans    &trans     &trans     &kp RALT
            >;
        };

        LEFT_HRMOD {
            bindings = <
&trans  &trans        &trans            &trans        &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp DEL  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans            &trans        &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &kp Z         &kp C    &kp V     &trans  &trans  &trans
            >;
        };

        RIGHT_HRMOD {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans         &trans             &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp DELETE  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_GUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans         &trans             &trans         &trans
                        &trans  &trans  &trans    &trans  &trans      &trans
            >;
        };

        TOP_LAYER {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans    &trans      &kp C_VOLUME_UP    &rgb_ug RGB_BRI  &trans  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &trans    &kp K_MUTE  &kp C_VOLUME_DOWN  &rgb_ug RGB_BRD  &trans  &trans  &trans
&trans  &trans      &trans        &trans        &trans        &trans    &trans      &trans             &trans           &trans  &trans  &trans
                                  &trans        &trans        &trans    &trans      &trans             &trans
            >;
        };

        GAMING_LAYER {
            bindings = <
&kp ESC  &kp TAB           &kp Q  &kp W  &kp E      &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LEFT_SHIFT    &kp A  &kp S  &kp D      &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LEFT_CONTROL  &kp Z  &kp X  &kp C      &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp C  &kp SPACE  &kp SPACE    &tog 0  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        TOP_LAYER {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };
};
